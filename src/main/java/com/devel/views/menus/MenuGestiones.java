package com.devel.views.menus;

import com.devel.custom.DnDTabbedPane;
import com.devel.views.dialogs.*;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Locale;

public class MenuGestiones {
    private JPanel panelPrincipal;
    private JButton nivelesButton;
    private JButton btnGrados;
    private JButton btnSeguros;
    private JButton btnSecciones;
    private JButton btnEscalasDePago;
    private JButton btnTiposdeDocumentos;
    private JButton usuariosButton;
    private JButton btnSalones;
    private JButton btnTipodeRelaciones;
    private DnDTabbedPane tabContenido;

    public MenuGestiones(DnDTabbedPane tabContenido) {
        this.tabContenido = tabContenido;
        nivelesButton.addActionListener(e -> {
            cargarGestionNiveles();
        });
        btnGrados.addActionListener(e -> {
            cargarGestionarGrados();
        });
        btnSeguros.addActionListener(e -> {
            cargarGestionSeguros();
        });
        btnSecciones.addActionListener(e -> {
            cargarGestionarSecciones();
        });
        btnEscalasDePago.addActionListener(e -> {
            cargarGestionTarifas();
        });
        btnTiposdeDocumentos.addActionListener(e -> {
            cargarGestionTipoDocumentos();
        });
        btnSalones.addActionListener(e -> {
            cargarGestionSalones();
        });
        btnTipodeRelaciones.addActionListener(e -> {
            cargarGestionTipoRelaciones();
        });
    }

    public JPanel traerInicioOpciones() {
        return panelPrincipal;
    }

    private void cargarGestionNiveles() {
        DGestionNiveles dGestionNiveles = new DGestionNiveles();
        dGestionNiveles.setVisible(true);
    }

    private void cargarGestionTarifas() {
        DGestionTarifa dGestionNiveles = new DGestionTarifa();
        dGestionNiveles.setVisible(true);
    }

    private void cargarGestionarSecciones() {
        DGestionSecciones dGestionSecciones = new DGestionSecciones();
        dGestionSecciones.setVisible(true);
    }

    private void cargarGestionSeguros() {
        DGestionarSeguros dGestionNiveles = new DGestionarSeguros();
        dGestionNiveles.setVisible(true);
    }

    private void cargarGestionarGrados() {
        DGestionarGrados dGestionarGrados = new DGestionarGrados();
        dGestionarGrados.setVisible(true);
    }

    private void cargarGestionTipoDocumentos() {
        DGestionTipoDocumento dGestionarGrados = new DGestionTipoDocumento();
        dGestionarGrados.setVisible(true);
    }

    private void cargarGestionSalones() {
        DGestionSalon dGestionSalon = new DGestionSalon();
        dGestionSalon.setVisible(true);
    }

    private void cargarGestionTipoRelaciones() {
        DGestionTipoRelacion dGestionTipoRelacion = new DGestionTipoRelacion();
        dGestionTipoRelacion.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelPrincipal = new JPanel();
        panelPrincipal.setLayout(new GridLayoutManager(12, 1, new Insets(0, 5, 5, 5), -1, 10));
        panelPrincipal.setEnabled(true);
        panelPrincipal.setMaximumSize(new Dimension(140, -1));
        panelPrincipal.setMinimumSize(new Dimension(140, -1));
        panelPrincipal.setOpaque(true);
        panelPrincipal.setPreferredSize(new Dimension(140, 340));
        final Spacer spacer1 = new Spacer();
        panelPrincipal.add(spacer1, new GridConstraints(11, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        btnEscalasDePago = new JButton();
        btnEscalasDePago.setBorderPainted(true);
        btnEscalasDePago.setFocusPainted(false);
        Font btnEscalasDePagoFont = this.$$$getFont$$$(null, -1, 14, btnEscalasDePago.getFont());
        if (btnEscalasDePagoFont != null) btnEscalasDePago.setFont(btnEscalasDePagoFont);
        btnEscalasDePago.setText("<html><center>Escala de pago<center></html>");
        panelPrincipal.add(btnEscalasDePago, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nivelesButton = new JButton();
        nivelesButton.setBorderPainted(true);
        nivelesButton.setFocusPainted(false);
        Font nivelesButtonFont = this.$$$getFont$$$(null, -1, 14, nivelesButton.getFont());
        if (nivelesButtonFont != null) nivelesButton.setFont(nivelesButtonFont);
        nivelesButton.setText("Niveles");
        panelPrincipal.add(nivelesButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnGrados = new JButton();
        btnGrados.setBorderPainted(true);
        btnGrados.setFocusPainted(false);
        Font btnGradosFont = this.$$$getFont$$$(null, -1, 14, btnGrados.getFont());
        if (btnGradosFont != null) btnGrados.setFont(btnGradosFont);
        btnGrados.setText("Grados");
        panelPrincipal.add(btnGrados, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnSecciones = new JButton();
        btnSecciones.setBorderPainted(true);
        btnSecciones.setFocusPainted(false);
        Font btnSeccionesFont = this.$$$getFont$$$(null, -1, 14, btnSecciones.getFont());
        if (btnSeccionesFont != null) btnSecciones.setFont(btnSeccionesFont);
        btnSecciones.setText("Secciones");
        panelPrincipal.add(btnSecciones, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnTiposdeDocumentos = new JButton();
        btnTiposdeDocumentos.setBorderPainted(true);
        btnTiposdeDocumentos.setFocusPainted(false);
        Font btnTiposdeDocumentosFont = this.$$$getFont$$$(null, -1, 14, btnTiposdeDocumentos.getFont());
        if (btnTiposdeDocumentosFont != null) btnTiposdeDocumentos.setFont(btnTiposdeDocumentosFont);
        btnTiposdeDocumentos.setText("<html><center>Tipos de documentos<center></html>");
        panelPrincipal.add(btnTiposdeDocumentos, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnSeguros = new JButton();
        btnSeguros.setBorderPainted(true);
        btnSeguros.setFocusPainted(false);
        Font btnSegurosFont = this.$$$getFont$$$(null, -1, 14, btnSeguros.getFont());
        if (btnSegurosFont != null) btnSeguros.setFont(btnSegurosFont);
        btnSeguros.setText("Seguros");
        panelPrincipal.add(btnSeguros, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnSalones = new JButton();
        btnSalones.setBorderPainted(true);
        btnSalones.setFocusPainted(false);
        Font btnSalonesFont = this.$$$getFont$$$(null, -1, 14, btnSalones.getFont());
        if (btnSalonesFont != null) btnSalones.setFont(btnSalonesFont);
        btnSalones.setText("Salones");
        panelPrincipal.add(btnSalones, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        separator1.setInheritsPopupMenu(false);
        panelPrincipal.add(separator1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        usuariosButton = new JButton();
        usuariosButton.setBorderPainted(true);
        usuariosButton.setFocusPainted(false);
        Font usuariosButtonFont = this.$$$getFont$$$(null, -1, 14, usuariosButton.getFont());
        if (usuariosButtonFont != null) usuariosButton.setFont(usuariosButtonFont);
        usuariosButton.setText("Usuarios");
        panelPrincipal.add(usuariosButton, new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator2 = new JSeparator();
        separator2.setInheritsPopupMenu(false);
        panelPrincipal.add(separator2, new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnTipodeRelaciones = new JButton();
        btnTipodeRelaciones.setBorderPainted(true);
        btnTipodeRelaciones.setFocusPainted(false);
        Font btnTipodeRelacionesFont = this.$$$getFont$$$(null, -1, 14, btnTipodeRelaciones.getFont());
        if (btnTipodeRelacionesFont != null) btnTipodeRelaciones.setFont(btnTipodeRelacionesFont);
        btnTipodeRelaciones.setText("<html><center> Tipos de relaciones<center></html>");
        panelPrincipal.add(btnTipodeRelaciones, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelPrincipal;
    }

}
